@using HorsesForCourses.Service


@model PagedResult<CoachListResponse>

<h2>Coaches</h2>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Email</th>
            <th># Courses Assigned</th>
            <th>Edit</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var coach in Model.Items)
        {
            <tr>
                <td>@coach.Id</td>
                <td>@coach.Name</td>
                <td>@coach.Email</td>
                <td>@coach.NumberOfCoursesAssignedTo
                <td><a class="nav-link text-dark" asp-area="" asp-controller="CoachMVC" asp-action="Details"
                        asp-route-id="@coach.Id">Details</a>
                    <a class="nav-link text-dark" asp-area="" asp-controller="CoachMVC" asp-action="EditMenu"
                        asp-route-id="@coach.Id">Edit skills</a>
                </td>
            </tr>
        }
    </tbody>
</table>


<nav>
    <ul class="pagination">
        @if (Model.HasPrevious)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber - 1)" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span> Previous
                </a>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
            </li>
        }

        @if (Model.HasNext)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber + 1)" aria-label="Next">
                    Next <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>