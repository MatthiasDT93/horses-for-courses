@using HorsesForCourses.Service


@model PagedResult<CourseListResponse>

<h2>Courses</h2>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Start date</th>
            <th>End date</th>
            <th>Has schedule</th>
            <th>Has coach</th>
            <th>Status</th>
            <th>Edit</th>
            <th>Finalise</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var course in Model.Items)
        {
            <tr>
                <td>@course.Id</td>
                <td>@course.Name</td>
                <td>@course.startdate</td>
                <td>@course.enddate</td>
                <td>@course.hasSchedule</td>
                <td>@course.hasCoach</td>
                <td>@course.State</td>
                <td><a class="nav-link text-dark" asp-area="" asp-controller="CourseMVC" asp-action="Details"
                        asp-route-id="@course.Id">Details</a>
                    <a class="nav-link text-dark" asp-area="" asp-controller="CourseMVC" asp-action="EditSkillsMenu"
                        asp-route-id="@course.Id">Edit skill requirements</a>
                    <a class="nav-link text-dark" asp-area="" asp-controller="CourseMVC" asp-action="EditTimeslotsMenu"
                        asp-route-id="@course.Id">Edit schedule</a>
                </td>
                <td>
                    <form asp-controller="CourseMVC" asp-action="ConfirmCourse" method="post" style="display:inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="Id" value="@course.Id" />
                        <button type="submit" class="btn btn-success btn-sm confirm-btn" @(course.State.ToString() !=
                                                                                                                 "PENDING" ? "disabled" : "")>
                            @(course.State.ToString() != "PENDING" ? "Confirmed" : "Confirm course")</button>
                    </form>
                    <form asp-controller="CourseMVC" asp-action="AssignCoachMenu" method="get" style="display:inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="Id" value="@course.Id" />
                        <button type="submit" class="btn btn-success btn-sm" @(course.State.ToString() != "CONFIRMED" ?
                                                                                                     "disabled" : "")>
                            @(course.State.ToString() == "FINALISED" ? "Finalised" : "Assign Coach")</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Paging -->
<div>
    @*<span>Page @Model.PageNumber of @Model.TotalPages</span>*@
    <div class="btn-group" role="group">
        @if (Model.HasPrevious)
        {
            <a href="@Url.Action("Index", new { page = Model.PageNumber - 1, pageSize = Model.PageSize })"
                class="btn btn-primary btn-sm">
                Previous
            </a>
        }
        <nav>
            <ul class="pagination">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }
            </ul>
        </nav>
        @if (Model.HasNext)
        {
            <a href="@Url.Action("Index", new { page = Model.PageNumber + 1, pageSize = Model.PageSize })"
                class="btn btn-primary btn-sm">
                Next
            </a>
        }
    </div>
</div>



<script>
    function disableButton(form) {
        const button = form.querySelector('.confirm-btn');
        if (!button.disabled) {
            button.disabled = true;
            button.innerText = 'Confirmed...';
        }
    }
</script>